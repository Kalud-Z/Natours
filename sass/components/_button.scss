

.btn {
    &,
    &:link,
    &:visited {
        font-size: $default-font-size;
        text-decoration: none;
        text-transform: uppercase;
        padding: 1.5rem 4rem;
        display: inline-block;  /*this is inline element , so it is treated as Text => text-align:center in the parent element , will center this */
        border-radius: 10rem ;
        transition: all .2s;
        position: relative;     /* because its ::after element wants to have an absolute positioning. */
        border:none;
        cursor: pointer;
    }

    &:active,
    &:focus {   /* when you click the element */
        outline: none;
        transform: translateY(-1px);
        box-shadow: 0 .3rem .7rem rgba($color-black , .9); /* the shadow becomes less blurry upon clicking , which looks super cool*/
    }

    &:hover {
        transform: translateY(-3px);
        box-shadow: 0 .7rem 1.5rem rgba($color-black , .2);

        &::after { // upon hovering on .btn , the after element get the following properties !
            transform:  scaleX(1.4) scaleY(1.6);  
            opacity: 0;     /* it gets bigger and fades out upon hovering */
        }
    }

    
    &::after {               /* this is treated as a Child of & ! */
        content: "";            /* you HAVE to specify this */
        display: inline-block;  /* you HAVE to specify this */ /* because & is also inline-block */
        height: 100%;
        width: 100%;
        border-radius: 10rem;
        position: absolute;     /* it needs to have a reference , and that is the first element with a 'relative' position that it can find */
        top : 0;
        left : 0;
        z-index: -1;
        transition: all 1s;
    }

    &--animated {
        animation: MoveInBottom 0.5s ease-out;
        animation-delay: .5s;
        animation-fill-mode: backwards;  /* automatically apply the styles of the 0% state ,before the animation starts (during the animation-delay period)  */
    }

    &--white {
        background-color: $color-white;
        color: $color-dark-grey;
        &::after {
            background-color: $color-white;
        }        
    }

    &--green {
        background-color: $color-primary;
        color: $color-white;
        &::after {
            background-color: $color-primary;
        }        
    }

}


.btn-text {
    &:link ,
    &:visited {
        font-size: $default-font-size;
        color: lightgray;
        display : inline-block;
        text-decoration: none;
        border-bottom: .1rem solid $color-primary;
        padding: .3rem;
        transition: all 0.3s;
    }

    &:hover {
        background-color: $color-primary;
        color: $color-white;
        box-shadow: 0 1rem 2rem rgba($color-black, .15);
        transform: translateY(-0.45rem);
    }


    &:active {
        box-shadow: 0 .5rem 1rem rgba($color-black, .15);
        transform: translateY(0);
    }

    
}
































